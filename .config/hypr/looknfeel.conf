##################
### LOOK AND FEEL ###
##################

general {
	gaps_in = 20
	gaps_out = 12
	border_size = 5
	no_border_on_floating = false
	gaps_workspaces = 20
	col.active_border = rgba(0b2341ee) rgba(2576daee) rgba(d3e4f800) rgba(d3e4f8ee) 45deg
	col.inactive_border = rgba(595959aa)
	col.nogroup_border = 0xffffaaff
	col.nogroup_border_active = 0xffff00ff
	# Set to true enable resizing windows by clicking and dragging on borders and gaps
	resize_on_border = true
	extend_border_grab_area = 10
	resize_on_border = true
	hover_icon_on_border = true
	allow_tearing = false # Never true
	no_focus_fallback = true # if true, will not fall back to the next available window when moving focus in a direction where no window was found default: false
	resize_corner = 0 # force floating windows to use a specific corner when being resized (1-4 going clockwise from top left, 0 to disable) default: 0
	layout = dwindle
}

decoration {
	rounding = 15
	active_opacity = 0.95
	inactive_opacity = 0.38
	fullscreen_opacity = 1
	drop_shadow = true
	shadow_range = 4
	shadow_render_power = 3
	shadow_ignore_window = true # if true, the shadow will not be rendered behind the window itself, only around it.
	col.shadow = rgba(1a1a1aee)
	# col.shadow_inactive = 
	# shadow_offset = 0, 0
	shadow_scale = 0.9 # shadow’s scale. [0.0 - 1.0]
	dim_inactive = false
	# dim_strength = 0.5
	# dim_special = 0.2 #how much to dim the rest of the screen by when a special workspace is open. [0.0 - 1.0]	float	0.2
	# dim_around = 0.4 # how much the dimaround window rule should dim by. [0.0 - 1.0]	float	0.4
	# screen_shader = #a path to a custom shader to be applied at the end of rendering. See examples/screenShader.frag for an example.
	blur {
		enabled = true
		size = 3
		passes = 1
		ignore_opacity = true
		new_optimizations = true # whether to enable further optimizations to the blur. Recommended to leave on, as it will massively improve performance.
		xray = false # if enabled, floating windows will ignore tiled windows in their blur. Only available if blur_new_optimizations is true. Will reduce overhead on floating blur significantly.
		# noise = 0.0117
		# contrast = 0.8916
		# brightness = 0.8172
		vibrancy = 0.1696
		# vibrancy_darkness = 0 # How strong the effect of vibrancy is on dark areas . [0.0 - 1.0]
		special = false # whether to blur behind the special workspace (note: expensive)
		popups = false # whether to blur popups (e.g. right-click menus)
		popups_ignorealpha = 0.2 # works like ignorealpha in layer rules. If pixel opacity is below set value, will not blur. [0.0 - 1.0]
	}
}

# animation = NAME, ONOFF, SPEED, CURVE [,STYLE]
# ONOFF can be either 0 or 1, 0 to disable, 1 to enable. note: if it’s 0, you can omit further args.
# SPEED is the amount of ds (1ds = 100ms) the animation will take
# CURVE is the bezier curve name, see curves.
# STYLE (optional) is the animation style
animations {
	enabled = true
	first_launch_animation = true
	# Default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more
	bezier = myBezier, 0.05, 0.9, 0.1, 1.05
	animation = windows, 1, 7, myBezier
	animation = windowsOut, 1, 7, default, popin 80%
	animation = border, 1, 10, default
	animation = borderangle, 1, 8, default
	animation = fade, 1, 7, default
	animation = workspaces, 1, 6, default
	animation = workspaces, 1, 8, default
}


##############
### TILING ###
##############

dwindle {
	pseudotile = true # Master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
	preserve_split = true # if enabled, the split (side/top) will not change regardless of what happens to the container.
	force_split = 2 # 0 -> split follows mouse, 1 -> always split to the left (new = left or top) 2 -> always split to the right (new = right or bottom)
	smart_split = false # if enabled, allows a more precise control over the window split direction based on the cursor’s position. The window is conceptually divided into four triangles, and cursor’s triangle determines the split direction. This feature also turns on preserve_split.
	smart_resizing = true # if enabled, resizing direction will be determined by the mouse’s position on the window (nearest to which corner). Else, it is based on the window’s tiling position.
	permanent_direction_override = true # if enabled, makes the preselect direction persist until either this mode is turned off, another direction is specified, or a non-direction is specified (anything other than l,r,u/t,d/b)
	# special_scale_factor = 1 # specifies the scale factor of windows on the special workspace [0 - 1]
	# split_width_multiplier = 1.0 # specifies the auto-split width multiplier
	no_gaps_when_only = 0 # whether to apply gaps when there is only one window on a workspace, aka. smart gaps. (default: disabled - 0) no border - 1, with border - 2 [0/1/2]
	use_active_for_splits = true # whether to prefer the active window or the mouse position for splits
	default_split_ratio = 1.05 # the default split ratio on window open. 1 means even 50/50 split. [0.1 - 1.9]
	split_bias = 1 # specifies which window will receive the larger half of a split. positional - 0, current window - 1, opening window - 2 [0/1/2]
}

master {
	allow_small_split = false # enable adding additional master windows in a horizontal split style
	special_scale_factor = 1 # the scale of the special workspace windows. [0.0 - 1.0]
	mfact = 0.60 # the size as a percentage of the master window, for example mfact = 0.70 would mean 70% of the screen will be the master window, and 30% the slave [0.0 - 1.0]
	new_status = slave # master: new window becomes master; slave: new windows are added to slave stack; inherit: inherit from focused window
	new_on_top = true # whether a newly open window should be on the top of the stack
	# new_on_active = before # before, after: place new window relative to the focused window; none: place new window according to the value of new_on_top.
	# no_gaps_when_only = 2 # whether to apply gaps when there is only one window on a workspace, aka. smart gaps. (default: disabled - 0) no border - 1, with border - 2 [0/1/2]
	orientation = left # default placement of the master area, can be left, right, top, bottom or center
	inherit_fullscreen = false # inherit fullscreen status when cycling/swapping to another window (e.g. monocle layout)
	# always_center_master = false # when using orientation=center, keep the master window centered, even when it is the only window in the workspace.
	# smart_resizing = false # if enabled, resizing direction will be determined by the mouse’s position on the window (nearest to which corner). Else, it is based on the window’s tiling position.
	drop_at_cursor = true # when enabled, dragging and dropping windows will put them at the cursor position. Otherwise, when dropped at the stack side, they will go to the top/bottom of the stack depending on new_on_top.
}


############################
### WINDOWS AND WORKSPACES ###
############################

# Apply to all windows
windowrulev2 = suppressevent maximize, class:.*

# Float
  # font managers
    windowrule = float, com.github.FontManager.FontManager
    windowrule = float, org.gnome.Characters
  # others
    windowrulev2 = float,class:^(feh)$
    windowrule = float, zenity
# Position
  windowrule = move (0,0), ^(Brave)$
# Opacity
  windowrule = opaque, title:^(.*GIMP.*)$



############
### MISC ###
############

# https://wiki.hyprland.org/Configuring/Variables/#misc
misc {
	disable_hyprland_logo = false # If true disables the random hyprland logo / anime girl background. :(					
	disable_splash_rendering = false # disables the Hyprland splash rendering. (requires a monitor reload to take effect)
	# col.splash = 0xffffffff # Changes the color of the splash text (requires a monitor reload to take effect).
	# font_family = Sans # Set the global default font to render the text including debug fps/notification, config error messages and etc., selected from system fonts.
	# splash_font_family = # Changes the font used to render the splash text, selected from system fonts (requires a monitor reload to take effect).
	force_default_wallpaper = -1 # Enforce any of the 3 default wallpapers. Setting this to 0 or 1 disables the anime background. -1 means “random”. [-1/0/1/2]
	vfr = true # controls the VFR status of Hyprland. Heavily recommended to leave enabled to conserve resources.
	# vrr = 0 #ccontrols the VRR (Adaptive Sync) of your monitors. 0 - off, 1 - on, 2 - fullscreen only [0/1/2]
	mouse_move_enables_dpms = true # If DPMS is set to off, wake up the monitors if the mouse moves.
	key_press_enables_dpms = true # If DPMS is set to off, wake up the monitors if a key is pressed.
	always_follow_on_dnd = true # Will make mouse focus follow the mouse when drag and dropping. Recommended to leave it enabled, especially for people using focus follows mouse at 0.
	layers_hog_keyboard_focus = true # If true, will make keyboard-interactive layers keep their focus on mouse move (e.g. wofi, bemenu)
	animate_manual_resizes = true # If true, will animate manual window resizes/moves
	animate_mouse_windowdragging = false # If true, will animate windows being dragged by mouse, note that this can cause weird behavior on some curves
	disable_autoreload = false # If true, the config will not reload automatically on save, and instead needs to be reloaded with hyprctl reload. Might save on battery.
	# enable_swallow = false # Enable window swallowing
	# swallow_regex = # The class regex to be used for windows that should be swallowed (usually, a terminal). To know more about the list of regex which can be used use this cheatsheet.
	# swallow_exception_regex = The title regex to be used for windows that should not be swallowed by the windows specified in swallow_regex (e.g. wev). The regex is matched against the parent (e.g. Kitty) window’s title on the assumption that it changes to whatever process it’s running.
	# focus_on_activate = false # Whether Hyprland should focus an app that requests to be focused (an activate request)
	mouse_move_focuses_monitor = true # Whether mouse moving into a different monitor should focus it
	# render_ahead_of_time = false # [Warning: buggy] starts rendering before your monitor displays a frame in order to lower latency
	# render_ahead_safezone = 1 # how many ms of safezone to add to rendering ahead of time. Recommended 1-2.
	allow_session_lock_restore = false # if true, will allow you to restart a lockscreen app in case it crashes (red screen of death)
	# background_color = 0x111111 # change the background color. (requires enabled disable_hyprland_logo)
	close_special_on_empty = true #close the special workspace if the last window is removed
	new_window_takes_over_fullscreen = 2 # if there is a fullscreen or maximized window, decide whether a new tiled window opened should replace it, stay behind or disable the fullscreen/maximized state. 0 - behind, 1 - takes over, 2 - unfullscreen/unmaxize [0/1/2]
	exit_window_retains_fullscreen = false # if true, closing a fullscreen window makes the next focused window fullscreen
	initial_workspace_tracking = 1 # if enabled, windows will open on the workspace they were invoked on. 0 - disabled, 1 - single-shot, 2 - persistent (all children too)
	middle_click_paste = true # whether to enable middle-click-paste (aka primary selection)
	# render_unfocused_fps = 15 # the maximum limit for renderunfocused windows’ fps in the background (see also Window-Rules - renderunfocused)
	disable_xdg_env_checks = false #disable the warning if XDG environment is externally managed
}
